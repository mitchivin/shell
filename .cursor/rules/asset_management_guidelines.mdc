---
description: 
globs: 
alwaysApply: true
---
# Asset Management Guidelines

These guidelines cover the organization, formats, and optimization of static assets (images, fonts, etc.) within the project.

## Asset Storage Location

*   **Root Directory**: All static assets must be stored within the `assets/` directory at the root of the workspace.
*   **Subdirectory Structure**:
    *   **`assets/fonts/`**: This directory is dedicated to font files (e.g., `[tahoma.woff2](mdc:assets/fonts/tahoma.woff2)`, `[tahomabd.woff](mdc:assets/fonts/tahomabd.woff)`).
    *   **`assets/gui/`**: Contains assets used by the core graphical user interface components. This is further subdivided by component:
        *   `assets/gui/boot/` (e.g., `[favicon.png](mdc:assets/gui/boot/favicon.png)`, `[loading.webp](mdc:assets/gui/boot/loading.webp)`)
        *   `assets/gui/desktop/` (e.g., `[bliss.jpg](mdc:assets/gui/desktop/bliss.jpg)`, `[about.webp](mdc:assets/gui/desktop/about.webp)`)
        *   `assets/gui/start-menu/` (e.g., `[shutdown.webp](mdc:assets/gui/start-menu/shutdown.webp)`)
        *   `assets/gui/taskbar/` (e.g., `[start-button.webp](mdc:assets/gui/taskbar/start-button.webp)`, `[system-tray.webp](mdc:assets/gui/taskbar/system-tray.webp)`)
    *   **`assets/apps/`**: Contains assets specific to individual applications. This should be further subdivided by application name.
        *   Example: `assets/apps/projects/` for assets used by the "My Projects" application (e.g., `[volup.webp](mdc:assets/apps/projects/volup.webp)`).
*   **Consistency**: Maintain this structure for any new assets added to the project.

## File Formats

*   **Images**: 
    *   Prefer modern, web-optimized image formats. `.webp` is used extensively for icons and UI elements due to its good balance of quality and file size.
    *   `.jpg` is used for larger photographic images like the desktop wallpaper (`[bliss.jpg](mdc:assets/gui/desktop/bliss.jpg)`).
    *   `.png` can be used where transparency is critical and WebP is not suitable, or for very small icons like the favicon.
*   **Fonts**:
    *   Use `.woff2` as the primary font format due to its superior compression. 
    *   Provide `.woff` as a fallback for older browser compatibility, as seen in `[src/styles/fonts.css](mdc:src/styles/fonts.css)`.
*   **Videos**: Short video clips (e.g., for project thumbnails in `assets/apps/projects/`) are used in `.mp4` format.

## Asset Optimization

*   **Image Compression**: All images should be optimized to reduce file size without significant loss of visual quality. Use tools for image compression before adding them to the project.
*   **Font Subsetting**: If only a limited character set is needed from a font, consider subsetting the font files (though this is not currently explicitly done for Tahoma).

## Preloading Assets

*   **Critical Assets**: Assets essential for the initial rendering and usability of the simulation are preloaded in `[index.html](mdc:index.html)` using `<link rel="preload">`. This includes core GUI images (wallpaper, desktop icons, taskbar elements) and some application assets.
*   **JavaScript-driven Preloading**: Additional assets, particularly for applications like "My Projects" which has many images and videos, are preloaded via JavaScript in `[src/scripts/main.js](mdc:src/scripts/main.js)` by dynamically creating `<link rel="preload">` tags.
*   **New Assets**: When adding new applications or significant visual elements, evaluate if their critical assets should also be preloaded to improve user experience.

## Referencing Assets

*   Always use paths relative to the location of the HTML or CSS file referencing the asset.
    *   Example from `[index.html](mdc:index.html)`: `href="./assets/gui/desktop/bliss.jpg"`
    *   Example from `[src/styles/gui/desktop.css](mdc:src/styles/gui/desktop.css)`: `url('../../../assets/gui/desktop/bliss.jpg')` (note the `../` to navigate up from `src/styles/gui/` to the root, then down to `assets/`).

